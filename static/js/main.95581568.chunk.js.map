{"version":3,"sources":["components/Selector.js","components/SelectedValue.js","App.js","index.js"],"names":["Selector","currentDataset","setCurrentDataset","selection","setSelection","handleSelection","event","target","value","options","forEach","option","isChecked","checked","optionsToSelect","map","id","key","type","onChange","htmlFor","SelectedValue","isSelecting","setIsSelecting","optionsSelected","isNoOptionSelected","every","undefined","className","onClick","name","subtitle","App","useState","datasets","datasetsToSelect","dataset","index","tabIndex","onBlur","datasetNameSelected","style","position","left","disabled","selected","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.95581568.chunk.js","sourcesContent":["import React, { Fragment } from 'react';\nimport '../css/Selector.css'\n\nconst Selector = ({currentDataset, setCurrentDataset, selection, setSelection}) => {\n\n  const handleSelection = (event) => {\n    setSelection(selection + ' , ' + event.target.value)\n    currentDataset.options.forEach(option => {\n      if(option.value === event.target.value){\n        option.isChecked = event.target.checked\n      }\n    })\n    setCurrentDataset(currentDataset)\n  }\n\n  const optionsToSelect = currentDataset.options.map(({id, value, isChecked}) => {\n    return (\n      <Fragment key={id}>\n        <input type=\"checkbox\" id={value} value={value} checked={isChecked} onChange={handleSelection}/>\n        <label htmlFor={value}>{value}</label>\n      </Fragment>\n    )\n  })\n\n  return (\n    <form>\n      {optionsToSelect}\n    </form>\n  )\n}\n\nexport default Selector;\n","import React, { Fragment } from 'react';\nimport '../css/SelectedValue.css'\n\nconst SelectedValue = ({currentDataset, isSelecting, setIsSelecting}) => {\n\n  const optionsSelected = currentDataset.options.map(option => {\n    if(option.isChecked){\n      return (\n        <Fragment key={option.id}>\n          {option.value + ' '}\n        </Fragment>\n      )}\n  })\n\n  const isNoOptionSelected = optionsSelected.every(option => option === undefined)\n\n  return (\n    <section className=\"selected-values\" onClick={() => setIsSelecting(!isSelecting)}>\n\n      { isNoOptionSelected\n        ?\n      <div className=\"no-values\" >{currentDataset.name}</div>\n        : \n      <div className=\"values\" >{optionsSelected}</div> \n      }\n      \n      { isNoOptionSelected \n        ? \n      '' \n        : \n      <div className=\"subtitle\">{currentDataset.subtitle}</div>\n      }\n\n    </section>\n  )\n}\n\nexport default SelectedValue;\n","import React, { useState } from 'react';\nimport Selector from './components/Selector';\nimport SelectedValue from './components/SelectedValue';\nimport './css/App.css'\n\nconst App = () => {\n\n  const [datasets, setDatasets] = useState([\n    {\n      name: \"MECHANISM\",\n      options: [\n        {id: 1, value: \"ABRASION\", isChecked: false},\n        {id: 3, value: \"BURN\", isChecked: false},\n        {id: 4, value: \"FROST\", isChecked: false},\n        {id: 5, value: \"GUN SHOT\", isChecked: false},\n        {id: 6, value: \"LACERATION\", isChecked: false},\n        {id: 7, value: \"RTC\", isChecked: false},\n        {id: 8, value: \"STAB\", isChecked: false}\n      ],\n      subtitle: \"Mechanism of Injury\"\n    },\n    {\n      name: \"MODE OF TRANSPORT\",\n      options: [\n        {id: 1, value: \"AMBULANCE\", isChecked: false},\n        {id: 3, value: \"HELICOPTER\", isChecked: false},\n        {id: 4, value: \"CAR\", isChecked: false}\n      ],\n      subtitle: \"Mode of Transport\"\n    }\n  ])\n\n  const [currentDataset, setCurrentDataset] = useState(datasets[0])\n\n  const [isSelecting, setIsSelecting] = useState(false)\n\n  const [selection, setSelection] = useState(\"\")\n\n  const datasetsToSelect = datasets.map((dataset, index) => {\n    return (\n      <option key={index} value={dataset.name} >{dataset.name}</option>\n    )\n  })\n  \n  const handleChange = (event) => {\n    const datasetNameSelected = event.target.value\n\n    datasets.forEach(dataset => {\n      if(dataset.name === datasetNameSelected){\n        setCurrentDataset(dataset)\n      }\n    })\n  }\n\n  return (\n    <section className=\"main-container\" tabIndex=\"0\" onBlur={() => setIsSelecting(false)}>\n      \n      <select onChange={handleChange} style={{position: \"absolute\", left: 0}}>\n        <option disabled selected>Select an Option</option>\n        {datasetsToSelect}\n      </select>\n\n      <SelectedValue currentDataset={currentDataset} isSelecting={isSelecting} setIsSelecting={setIsSelecting}/>\n      {isSelecting && <Selector currentDataset={currentDataset} setCurrentDataset={setCurrentDataset} selection={selection} setSelection={setSelection} />} \n    \n    </section>\n  )\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}